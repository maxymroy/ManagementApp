@{
    ViewData["Title"] = "Expense Manager";
}
@model ManagementApp.ViewModels.BudgetViewModel

<h2>@ViewData["Title"]</h2>

<div class="container">
    <div class="row">
        @Html.DisplayFor(Model => Model.Budget, "Budget")
    </div>
    <div class="row">
        <h2>Add A New Expense</h2>
            @Html.Partial("AddExpense", new ManagementApp.ViewModels.ExpenseManagingViewModel(new ManagementApp.Models.BudgetItem(new Random().Next(),"Your description",0m,'Y')))
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function validateFloatKeyPress(el, evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            var number = el.value.split('.');
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            //just one dot (thanks ddlab)
            if (number.length > 1 && charCode == 46) {
                return false;
            }
            //get the carat position
            var caratPos = getSelectionStart(el);
            var dotPos = el.value.indexOf(".");
            if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
                return false;
            }
            return true;
        }

        //thanks: http://javascript.nwbox.com/cursor_position/
        function getSelectionStart(o) {
            if (o.createTextRange) {
                var r = document.selection.createRange().duplicate()
                r.moveEnd('character', o.value.length)
                if (r.text == '') return o.value.length
                return o.value.lastIndexOf(r.text)
            } else return o.selectionStart
        };
        $(document).ready(function () {

            $('[id*="delete_btn"]').click(function () {
                var id = $(this).attr("data-id");

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteExpense", "Budget")',
                    data: { id: id }

                }).done(function () {
                    window.location.reload();
                });
            });



            $.validator.methods.number = function (value, element) {
                return this.optional(element) || jQuery.isNumeric(Globalize.parseFloat(value));
            }

            //Fix the range to use globalized methods
            jQuery.extend(jQuery.validator.methods, {
                range: function (value, element, param) {
                    var val = Globalize.parseFloat(value);
                    return this.optional(element) || (val >= param[0] && val <= param[1]);
                }
            });

            $.validator.methods.date = function (value, element) {
                return (this.optional(element) || Globalize.parseDate(value));
            }
        });
    </script>
}